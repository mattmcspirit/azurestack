{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "vmName": {
            "type": "string",
            "defaultValue": "mysql",
            "metadata": {
                "description": "VM Name"
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_D3_v2",
            "metadata": {
                "description": "VM Size"
            }
        },
        "adminUsername": {
            "type": "string",
            "defaultValue": "mysqladmin",
            "metadata": {
                "description": "Admin user name"
            }
        },
        "authenticationType": {
            "type": "string",
            "defaultValue": "password",
            "metadata": {
                "description": "Authentication Type [password|sshPublicKey]"
            }
        },
        "adminPassword": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "Admin password"
            }
        },
        "mySQLPassword": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "MySQL Database password"
            }
        },
        "sshPublicKey": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "SSH key"
            }
        },
        "virtualNetworkNewOrExisting": {
            "type": "string",
            "defaultValue": "new",
            "metadata": {
                "description": "Virtual Network New Or Existing"
            }
        },
        "virtualNetworkName": {
            "type": "string",
            "defaultValue": "mysql_vnet",
            "metadata": {
                "description": "Virtual Network Name"
            }
        },
        "virtualNetworkAddressPrefix": {
            "type": "string",
            "defaultValue": "10.0.0.0/16",
            "metadata": {
                "description": "Virtual Network Address Prefix"
            }
        },
        "virtualNetworkSubnetName": {
            "type": "string",
            "defaultValue": "mysql_subnet",
            "metadata": {
                "description": "Virtual Network subnet name"
            }
        },
        "virtualNetworkSubnetAddressPrefix": {
            "type": "string",
            "defaultValue": "10.0.0.0/24",
            "metadata": {
                "description": "Virtual Network subnet address prefix"
            }
        },
        "virtualNetworkResourceGroup": {
            "type": "string",
            "metadata": {
                "description": "Resouce Group of the virtual network"
            },
            "defaultValue": ""
        },
        "publicIPAddressNewOrExisting": {
            "type": "string",
            "defaultValue": "new",
            "metadata": {
                "description": "Public IP Address New or Existing"
            }
        },
        "publicIPAddressName": {
            "type": "string",
            "defaultValue": "mysql_ip",
            "metadata": {
                "description": "Public IP Address Name"
            }
        },
        "publicIPAddressDomainNameLabel": {
            "type": "string",
            "defaultValue": "mysql",
            "metadata": {
                "description": "Public IP domain name prefix"
            }
        },
        "publicIPAddressResourceGroup": {
            "type": "string",
            "metadata": {
                "description": "Name of the Public IP Adresseses Resource Group"
            },
            "defaultValue": ""
        },
        "resourceGroupName": {
            "type": "string",
            "metadata": {
                "description": "Name of the resource group into which everything will be deployed"
            }
        },
        "storageAccountNewOrExisting": {
            "type": "string",
            "defaultValue": "new",
            "metadata": {
                "description": "Storage Account New or Existing"
            }
        },
        "storageAccountName": {
            "type": "string",
            "defaultValue": "mysqlstor",
            "metadata": {
                "description": "Storage Account Name"
            }
        },
        "storageAccountType": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "metadata": {
                "description": "Storage Account Type"
            }
        },
        "storageAccountResourceGroup": {
            "type": "string",
            "metadata": {
                "description": "Resouce Group of the storage account to use for Virtual Machine disks"
            },
            "defaultValue": ""
        },
        "diagnosticStorageAccountName": {
            "type": "string",
            "defaultValue": "mysqldiagstor",
            "metadata": {
                "description": "Name of the storage account to use for diagnostics"
            }
        },
        "diagnosticStorageAccountNewOrExisting": {
            "type": "string",
            "defaultValue": "new",
            "metadata": {
                "description": "State whether to create or use an existing storage account"
            }
        },
        "diagnosticStorageAccountType": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "metadata": {
                "description": "Type of storage account to create for diagnostics"
            }
        },
        "diagnosticStorageAccountResourceGroup": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Resouce Group of the storage account to use for diagnostics"
            }
        },
        "nicName": {
            "type": "string",
            "defaultValue": "mysql_nic",
            "metadata": {
                "description": "NIC name"
            }
        },
        "templateBaseUrl": {
            "type": "string",
            "metadata": {
                "artifactsBaseUrl": "",
                "description": "Specify the URL of where the additional MySQL JSON template files can be found"
            },
            "defaultValue": "https://raw.githubusercontent.com/mattmcspirit/azurestack/MySQL/packages/MySQL/DevOpsToolkit.MySQL/DeploymentTemplates/"
        },
        "scriptBaseUrl": {
            "type": "string",
            "metadata": {
                "artifactsBaseUrl": "",
                "description": "Specify the URL of where the MySQL install script can be found"
            },
            "defaultValue": "https://raw.githubusercontent.com/mattmcspirit/azurestack/MySQL/scripts/"
        }
    },
    "variables": {
        "apiVersions": {
            "deployments": "2015-01-01",
            "networkInterfaces": "2015-06-15",
            "networkSecurityGroups": "2015-06-15",
            "publicIPAddresses": "2015-06-15",
            "storageAccounts": "2015-06-15",
            "virtualMachineExtensions": "2016-03-30",
            "virtualMachines": "2016-03-30",
            "virtualNetworks": "2015-06-15"
        },
        "imagePublisher": "Canonical",
        "imageOffer": "UbuntuServer",
        "imageSku": "16.04-LTS",
        "imageVersion": "latest",
        "diagnosticStorageAccountResourceGroupnew": "[resourceGroup().name]",
        "diagnosticStorageAccountResourceGroupexisting": "[parameters('diagnosticStorageAccountResourceGroup')]",
        "diagnosticStorageAccountResourceGroup": "[variables(concat('diagnosticStorageAccountResourceGroup', parameters('diagnosticStorageAccountNewOrExisting')))]",
        "storageAccountResourceGroupnew": "[resourceGroup().name]",
        "storageAccountResourceGroupexisting": "[parameters('storageAccountResourceGroup')]",
        "storageAccountResourceGroup": "[variables(concat('storageAccountResourceGroup', parameters('storageAccountNewOrExisting')))]",
        "osProfilepassword": {
            "computerName": "[parameters('vmName')]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPassword')]"
        },
        "osProfilesshPublicKey": {
            "computerName": "[parameters('vmName')]",
            "adminUsername": "[parameters('adminUsername')]",
            "linuxConfiguration": {
                "disablePasswordAuthentication": true,
                "ssh": {
                    "publicKeys": [
                        {
                            "keyData": "[parameters('sshPublicKey')]",
                            "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]"
                        }
                    ]
                }
            }
        },
        "osProfile": "[variables(concat('osProfile', parameters('authenticationType')))]",
        "nsgName": "[concat(parameters('vmName'), 'nsg')]",
        "storageAccountSetupUrl": "[concat(parameters('templateBaseUrl'),'/storage-',parameters('storageAccountNewOrExisting'),'.json')]",
        "diagnosticStorageAccountSetupUrl": "[concat(parameters('templateBaseUrl'), '/storage-', parameters('diagnosticStorageAccountNewOrExisting'), '.json')]",
        "publicIpAddressSetupUrl": "[concat(parameters('templateBaseUrl'),'/publicip-',parameters('publicIPAddressNewOrExisting'),'.json')]",
        "vnetSetupUrl": "[concat(parameters('templateBaseUrl'),'/vnet-',parameters('virtualNetworkNewOrExisting'),'.json')]"
    },
    "resources": [
        {
            "name": "ProvisioningStorageAccount",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('apiVersions').deployments]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('storageAccountSetupUrl')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "apiVersions": {
                        "value": "[variables('apiVersions')]"
                    },
                    "storageAccountType": {
                        "value": "[parameters('storageAccountType')]"
                    },
                    "storageAccountResourceGroup": {
                        "value": "[variables('storageAccountResourceGroup')]"
                    },
                    "storageAccountName": {
                        "value": "[parameters('storageAccountName')]"
                    }
                }
            }
        },
        {
            "name": "ProvisioningDiagnosticStorageAccount",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('apiVersions').deployments]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('diagnosticStorageAccountSetupUrl')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "apiVersions": {
                        "value": "[variables('apiVersions')]"
                    },
                    "storageAccountType": {
                        "value": "[parameters('diagnosticStorageAccountType')]"
                    },
                    "storageAccountResourceGroup": {
                        "value": "[variables('diagnosticStorageAccountResourceGroup')]"
                    },
                    "storageAccountName": {
                        "value": "[parameters('diagnosticStorageAccountName')]"
                    }
                }
            }
        },
        {
            "name": "[variables('nsgName')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "[variables('apiVersions').networkSecurityGroups]",
            "dependsOn": [],
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "ssh",
                        "properties": {
                            "priority": 1010,
                            "sourceAddressPrefix": "*",
                            "protocol": "TCP",
                            "destinationPortRange": "22",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*"
                        }
                    },
                    {
                        "name": "MySQL",
                        "properties": {
                            "priority": 1020,
                            "sourceAddressPrefix": "*",
                            "protocol": "TCP",
                            "destinationPortRange": "3306",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*"
                        }
                    }
                ]
            }
        },
        {
            "name": "ProvisioningVirtualNetwork",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('apiVersions').deployments]",
            "dependsOn": [],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('vnetSetupUrl')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "apiVersions": {
                        "value": "[variables('apiVersions')]"
                    },
                    "virtualNetworkName": {
                        "value": "[parameters('virtualNetworkName')]"
                    },
                    "virtualNetworkResourceGroup": {
                        "value": "[parameters('virtualNetworkResourceGroup')]"
                    },
                    "virtualNetworkAddressPrefix": {
                        "value": "[parameters('virtualNetworkAddressPrefix')]"
                    },
                    "virtualNetworkSubnetName": {
                        "value": "[parameters('virtualNetworkSubnetName')]"
                    },
                    "virtualNetworkSubnetAddressPrefix": {
                        "value": "[parameters('virtualNetworkSubnetAddressPrefix')]"
                    }
                }
            }
        },
        {
            "name": "ProvisioningPublicIPs",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('apiVersions').deployments]",
            "dependsOn": [],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('publicIpAddressSetupUrl')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "apiVersions": {
                        "value": "[variables('apiVersions')]"
                    },
                    "publicIPAddressType": {
                        "value": "Dynamic"
                    },
                    "publicIPAddressName": {
                        "value": "[parameters('publicIPAddressName')]"
                    },
                    "publicIPAddressResourceGroup": {
                        "value": "[parameters('publicIPAddressResourceGroup')]"
                    },
                    "publicIPAddressDomainNameLabel": {
                        "value": "[parameters('publicIPAddressDomainNameLabel')]"
                    }
                }
            }
        },
        {
            "name": "[parameters('nicName')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "[variables('apiVersions').networkInterfaces]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "Microsoft.Resources/deployments/ProvisioningPublicIPs",
                "Microsoft.Resources/deployments/ProvisioningVirtualNetwork",
                "[concat('Microsoft.Network/networkSecurityGroups/', variables('nsgName'))]"
            ],
            "properties": {
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('nsgName'))]"
                },
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[reference('ProvisioningPublicIPs').outputs.publicIpId.value]"
                            },
                            "subnet": {
                                "id": "[reference('ProvisioningVirtualNetwork').outputs.subnetRef.value]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "name": "[parameters('vmName')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "[variables('apiVersions').virtualMachines]",
            "dependsOn": [
                "Microsoft.Resources/deployments/ProvisioningStorageAccount",
                "Microsoft.Resources/deployments/ProvisioningDiagnosticStorageAccount",
                "[concat('Microsoft.Network/networkInterfaces/', parameters('nicName'))]"
            ],
            "location": "[resourceGroup().location]",
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": "[variables('osProfile')]",
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[variables('imageSKU')]",
                        "version": "[variables('imageVersion')]"
                    },
                    "osDisk": {
                        "name": "[parameters('vmName')]",
                        "vhd": {
                            "uri": "[concat(reference(resourceId(parameters('storageAccountResourceGroup'), 'Microsoft.Storage/storageAccounts/', parameters('storageAccountName')), variables('apiVersions').storageAccounts).primaryEndpoints.blob, 'vhds/', parameters('vmName'), uniquestring(Deployment().Name), '.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('nicName'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": "true",
                        "storageUri": "[reference('ProvisioningDiagnosticStorageAccount').outputs.blobEndpoint.value]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(parameters('vmName'),'/CustomScriptExtension')]",
            "apiVersion": "[variables('apiVersions').virtualMachineExtensions]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]"
            ],
            "location": "[resourceGroup().location]",
            "properties": {
                "publisher": "Microsoft.Azure.Extensions",
                "type": "CustomScript",
                "typeHandlerVersion": "2.0",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "fileUris": [
                        "[concat(parameters('scriptBaseUrl'), 'install_MySQL.sh')]"
                    ],
                    "commandToExecute": "[concat('./install_MySQL.sh ', parameters('mySQLPassword'))]"
                }
            }
        }
    ],
    "outputs": {
        "MySQLVMFQDN:": {
            "value": "[reference('ProvisioningPublicIPs').outputs.fqdn.value]",
            "type": "string"
        },
        "MySQLAdminUsername ": {
            "type": "string",
            "value": "[parameters('adminUsername')]"
        },
        "MySQLDatabaseUsername ": {
            "type": "string",
            "value": "root"
        }
    }
}