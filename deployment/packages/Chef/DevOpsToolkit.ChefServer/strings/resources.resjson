{
  "displayName": "Chef Server",
  "publisherDisplayName": "DevOps Toolkit",
  "summary": "Chef Server 12 on an Ubuntu Server 16.04-LTS VM, pre-configured and ready to run on Azure Stack",
  "longSummary": "Chef Server 12 Ubuntu Server 16.04-LTS VM, pre-configured and ready to run on Azure Stack",
  "description": "<p>Whether you have five or five thousand servers, Chef lets you manage them all by turning infrastructure into code. Infrastructure described as code is flexible, versionable, human-readable, and testable.</p><p>Whether your infrastructure is in the cloud, on-premises or in a hybrid environment, you can easily and quickly adapt to your businessâ€™s changing needs with Chef</p><p>The Chef server acts as a hub for configuration data. The Chef server stores cookbooks, the policies that are applied to nodes, and metadata that describes each registered node that is being managed by the chef-client. Nodes use the chef-client to ask the Chef server for configuration details, such as recipes, templates, and file distributions. The chef-client then does as much of the configuration work as possible on the nodes themselves (and not on the Chef server). This scalable approach distributes the configuration effort throughout the organization</p><p>The deployment will go through a number of steps. Firstly, the Ubuntu 16.04-LTS virtual machine will be deployed. Towards the end of the deployment, a <a href='https://raw.githubusercontent.com/mattmcspirit/azurestack/master/scripts/install_chef.sh' target='_blank'>custom bash script</a> will be executed which will install Chef Server, Chef Manage and Chef Reporting, creating the first administrative user and organization based on the data you provide during deployment.</p><p>Once you have completed the deployment, view the Outputs in the deployment blade to access the Chef Manage FQDN and start using Chef!</p><p>For more information, review the links below.</p>",
  "documentationLink": "Chef",
  "documentationLink2": "Chef Documentation"
}